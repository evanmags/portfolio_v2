{"version":3,"sources":["components/banner.js","components/blog.js","components/portfolio.js","App.js","serviceWorker.js","index.js"],"names":["MenuBtn","props","internal","react_default","a","createElement","react_router_dom","id","text","className","to","href","Menubar","Banner","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","class","mouseenter","bind","assertThisInitialized","mouseleave","inherits","createClass","key","value","console","log","window","location","pathname","setState","onMouseEnter","onMouseLeave","Component","cards","require","blog","posts","BlogPost","BlogCard","title","date","desc","length","Blog","map","card","description","reading","blog_BlogPost","blog_cards","portfolio_projects","portfolio","projects","PortfolioCard","image","src","alt","name","langs","links","live_link","github","post","Portfolio","portfolio_cards","project","portfolio_PortfolioCard","p","slice","App","banner_Banner","react_router","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58edee99.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction MenuBtn(props) {\n  if (props.internal) {\n    return (\n      <Link id={props.text} className=\"menubar__btn\" to={props.href || \"#\"}>\n        {props.text}\n      </Link>\n    );\n  } else {\n    return (\n      <a id={props.text} className=\"menubar__btn\" href={props.href || \"#\"}>\n        {props.text}\n      </a>\n    );\n  }\n}\n\nexport function Menubar(props) {\n  return (\n    <div className=\"menubar\">\n      <MenuBtn text=\"portfolio\" href=\"/portfolio\" internal={true} />\n      <MenuBtn text=\"github\" href=\"https://github.com/evanmags\" />\n      <MenuBtn text=\"codepen\" href=\"https://codepen.io/emags112/\" />\n      <MenuBtn text=\"ramblings\" href=\"/blog\" internal={true} />\n    </div>\n  );\n}\n\nexport class Banner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      class: \"banner\"\n    };\n    this.mouseenter = this.mouseenter.bind(this);\n    this.mouseleave = this.mouseleave.bind(this);\n  }\n  mouseenter() {\n    console.log(window.location.pathname);\n    if (window.location.pathname === \"/portfolio_v2/\") {\n      this.setState({ class: \"banner banner-pop\" });\n    }\n  }\n  mouseleave() {\n    this.setState({ class: \"banner\" });\n  }\n  render() {\n    return (\n      <header\n        className={this.state.class}\n        onMouseEnter={this.mouseenter}\n        onMouseLeave={this.mouseleave}\n      >\n        <h1 className=\"banner__head\">Evan Magnussen</h1>\n        <h2 className=\"banner__subhead\">\n          Web Developer - Runner - Cook - Guitarist{\" \"}\n        </h2>\n        <Menubar />\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nconst cards = require('../data.json').blog.posts;\n\nclass BlogPost extends Component{\n  render(){\n    return <div></div>\n  }\n}\n\nfunction BlogCard(props){\n  return (<div className=\"blog__card\">\n            <h2 className=\"blog__title\">{props.title}</h2>\n            <span className=\"blog__date\">{props.date}</span>\n            <p className=\"blog__description\">{props.desc}</p>\n            <span className=\"blog__length\">{props.length}</span>\n          </div>)\n}\n\nexport default class Blog extends Component {\n  constructor(props){\n    super(props);\n    this.state = {}\n  }\n  blog_cards(){\n    return cards.map(card => <BlogCard title={card.title} date={card.date} desc={card.description} length={card.length}  key={card.title}/>)\n    // make call to cms\n    // get titles\n    // get description\n    // \n  }\n  render(){\n    return (<div className=\"blog\">\n              {this.state.reading \n                ? <BlogPost /> \n                : this.blog_cards()}\n            </div>)\n  }\n}","import React, { Component } from \"react\";\n\nconst portfolio_projects = require(\"../data.json\").portfolio.projects;\n\nclass PortfolioCard extends Component {\n  render() {\n    return (\n      <div className=\"portfolio__card\">\n        {this.props.image && (\n          <img className=\"card__image\" src={this.props.image} alt=\"project\" />\n        )}\n        <div className=\"card__body\">\n          <div className=\"card__head\">\n            <h2 className=\"card__title\">{this.props.name}</h2>\n            <span className=\"card__languages\">{this.props.langs}</span>\n          </div>\n          <div className=\"card__description\">{this.props.description}</div>\n          <div className=\"card__footer\">\n            {this.props.links.live_link && (\n              <a href={this.props.links.live_link}>\n                <button className=\"card__button\">Live Site</button>\n              </a>\n            )}\n            {this.props.links.github && (\n              <a href={this.props.links.github}>\n                <button className=\"card__button\">GitHub</button>\n              </a>\n            )}\n            {this.props.links.post && (\n              <a href={this.props.links.post}>\n                <button className=\"card__button\">Read More!</button>\n              </a>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class Portfolio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reading: true\n    };\n    this.portfolio_cards = this.portfolio_cards.bind(this);\n  }\n  portfolio_cards() {\n    return portfolio_projects.map(project => {\n      return (\n        <PortfolioCard\n          key={project.name}\n          name={project.name}\n          langs={project.langs}\n          image={project.image}\n          links={project.links || {}}\n          description={project.description.map(p => (\n            <p key={p.slice(0, 5)}>{p}</p>\n          ))}\n        />\n      );\n    });\n  }\n  render() {\n    return (\n      <div className=\"portfolio\">\n        {this.state.reading && this.portfolio_cards()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Banner } from \"./components/banner\";\nimport Blog from \"./components/blog\";\nimport Portfolio from \"./components/portfolio\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"App\">\n        <Banner />\n        <Switch>\n          <Route path=\"/portfolio\" component={Portfolio} />\n          <Route path=\"/blog\" component={Blog} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}